import dash
import dash_html_components as html
import dash_core_components as dcc
from dash.dependencies import Input, Output
import pandas as pd
import plotly.express as px
import plotly.graph_objs as go

df = pd.read_csv(r'C:\Users\gusta\PycharmProjects\pythonProject\teste3.csv')

material_options = [{'label': i, 'value': i} for i in df[
    'Material'].unique()]
radio_options =[{'label': 'Bar Chart', 'value': 'bar'},{'label':'Line Chart', 'value':'line'},
                {'label':'Amostras ', 'value':'amostra'}]

app = dash.Dash()
server = app.server

app.layout = html.Div([
    html.H1('ATIVIDADE DESAFIO'),
    html.P(['MATERIAIS DE PROJETO.',
            html.Br(),
            ]),
    dcc.Checklist(id='material-checklist',
                 options=material_options, value=['Normal']),
    dcc.Graph(id='happiness-graph'),
    dcc.RadioItems(id = 'choice', options=radio_options, value='bar')
    ])



@app.callback(
    Output(component_id='happiness-graph', component_property='figure'),
    [Input(component_id='material-checklist', component_property='value'),
     Input(component_id='choice', component_property= 'value')])
def update_graph(selected_material, choice_graph):
    dff = df[df['Material'].isin(selected_material)]
    print(dff['Material'].unique())
    if choice_graph == 'bar':
        fig = px.bar(dff, x='Projetos', y='Percentual', hover_name='Material')
        return fig
    elif choice_graph == 'line':
        fig = px.line(dff, x='Projetos', y='Percentual')
        return fig
    elif choice_graph == 'amostra':
        dff = [go.Histogram(x= dff.Material)]
        fig = fig = go.Figure(data=dff)
        return fig



   # line_fig = px.bar(filtered_df,
                       #x='Projetos', y='Percentual', hover_name='Material',
                       #title=f'PROJETOS')
    #return line_fig


if __name__ == '__main__':
    app.run_server(debug=True)